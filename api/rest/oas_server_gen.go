// Code generated by ogen, DO NOT EDIT.

package rest

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// TodosCreateTodo implements Todos_createTodo operation.
	//
	// POST /todos
	TodosCreateTodo(ctx context.Context, req *Todo) (*Todo, error)
	// TodosDeleteTodo implements Todos_deleteTodo operation.
	//
	// DELETE /todos/{todoID}
	TodosDeleteTodo(ctx context.Context, params TodosDeleteTodoParams) error
	// TodosGetTodo implements Todos_getTodo operation.
	//
	// GET /todos/{todoID}
	TodosGetTodo(ctx context.Context, params TodosGetTodoParams) (*Todo, error)
	// TodosListTodos implements Todos_listTodos operation.
	//
	// GET /todos
	TodosListTodos(ctx context.Context) ([]Todo, error)
	// TodosUpdateTodo implements Todos_updateTodo operation.
	//
	// PUT /todos/{todoID}
	TodosUpdateTodo(ctx context.Context, req *Todo, params TodosUpdateTodoParams) (*Todo, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
